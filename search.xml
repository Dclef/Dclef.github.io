<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>C语言中一些问题和代码的解释</title>
    <url>/2019/12/20/C%E8%AF%AD%E8%A8%80%E4%B8%AD%E4%B8%80%E4%BA%9B%E9%97%AE%E9%A2%98%E5%92%8C%E4%BB%A3%E7%A0%81%E7%9A%84%E8%A7%A3%E9%87%8A/</url>
    <content><![CDATA[<p>引言：这只针对学过C语言但没学懂和自己的总结经验，本文只按照自己的思路，关于错误和问题一概不论。<br>关于简单的代码一概不论，这里只单讲入门且不能理解的东西，至于前期环境安装和一些基础问题可以参考其他博客和我以前的博客。</p>
<p>首先需要明白什么是<strong>指令和头文件</strong>？</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br></pre></td></tr></table></figure>
<p>#include是一条C预处理器指令，C编译器在编译前做的准备工作，而stdio.h是头文件，此文件包含共编译器使用的输入和输出函数，如scanf(),printf()等等。<br>没有此头文件，你前期的代码根本完成不了，那么问题来了</p>
<p><strong>为什么不内置一个输入和输出，这样做不是更简单吗？</strong></p>
<p>原因很简单，有些程序根本用不到输入和输出，那么不就多此一举了吗。</p>
<p><strong>main()函数</strong></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">mian</span><span class="params">()</span></span></span><br></pre></td></tr></table></figure>
<p>此为入口文件，C程序通常情况下按main()开始执行。<br>int是返回值，但也是默认值。表明main()函数返回值是整数。<br>在现有学生阶段我们还可以用这样写</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="function">viod <span class="title">mian</span><span class="params">()</span></span></span><br></pre></td></tr></table></figure>
<p>但是这种写法并不认可，如果你用多个编辑器写的程序用此可能会报错。<br><strong>注释</strong>过于简单不讲只讲风格</p>
<blockquote>
<p>  /* 这也是一条注释<br> ， 被分成两行。*/<br> //这种注释只能写一行</p>
</blockquote>
<p><strong>花括号</strong><br>花括号把main()函数括起来。一般而言，所有的C函数都使用花括号标记函数体的开始和结束。<strong>这是死规定，不能省略。</strong></p>
<p><strong>声明</strong></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> i,j,k;</span><br></pre></td></tr></table></figure>

<p>此代码声明有i,j,k三个标识符，也就一个变量、函数或其他实体的名称。int 表明i,j,k三个标识符是一个整数。<br><strong>return语句</strong></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br></pre></td></tr></table></figure>
<p>有返回值的C函数要有return语句。该语句以return关键字开始，后面是待返回的值，并以分号结尾。<br><strong>getchar();</strong><br>这行代码会让程序等待击键，窗口会在用户按下一个键后才关闭。</p>
<p>关于<strong>浮点数</strong><br>1是整数，1.00是浮点数</p>
<p>C语言提供3个附属关键字修饰基本整数类型：short、long和unsigned。<br>应记住以下几点。<br>short 类型占用的存储空间可能比int少，short是有符号类型。</p>
<p>long占用的存储空间可能比int多，适用于较大数值，long是有符号类型。</p>
<p>unsigned int或unsigned只用于非负值。这种类型与有符号类型表示的范围不同。例如，16位unsigned int允许的取值范围是0～65535，而不<br>是-32768～32767。用于表示正负号的位现在用于表示另一个二进制位，所以无符号整型可以表示更大的数。</p>
<p><strong>char类型</strong>用于储存字符，它与int 声明都是一样的，这里只讲数组。<br><strong>float</strong> 单精度浮点数，至少精确到小数点6位。<br><strong>double</strong> 双精度浮点数，至少能表示小数点10位。<br><strong>long double</strong>，更高精度，这里不讲。</p>
<p><strong>字符串</strong></p>
<p>C语言没有专门用于储存字符串的变量类型，字符串都被储存在char类型的数组中。数组由连续的存储单元组成，字符串中的字符被储存在相邻的存储单元中，每个单元储存一个字符。<br>注意每一个数组末尾都有字符\0，这为控字符，它表示字符串的结束，这意味着你定义<strong>储存40个字符</strong>实际上只能储存39个字符，剩下一个给空字符\0用的。</p>
<p><strong>明示常量</strong></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> N 100<span class="comment">//定义N为100</span></span></span><br></pre></td></tr></table></figure>

<p><strong>printf函数</strong>（针对常用的）</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">%c <span class="comment">//单个字符</span></span><br><span class="line">&amp;d <span class="comment">//十进制整数</span></span><br><span class="line">%f <span class="comment">//浮点数十进制数</span></span><br><span class="line">%p <span class="comment">//指针</span></span><br><span class="line">%s <span class="comment">//字符串</span></span><br></pre></td></tr></table></figure>
<p>用法</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="built_in">printf</span>(<span class="string">"%8d %8d %8d\n"</span>, a, b c);<span class="comment">//这样会间隔一样比较美观</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%10s%10s%10%10\n"</span>, <span class="string">"学号"</span>, <span class="string">"姓名"</span>, <span class="string">"成绩"</span>, <span class="string">"平均成绩"</span>);</span><br></pre></td></tr></table></figure>

<p><strong>scanf函数</strong><br>printf()函数使用变量、常量和表达式，而scanf()函数使用指向变量的指针。</p>
<p>如果用scanf()读取基本变量类型的值，在变量名前加上一个&amp;。<br>但如果scanf()把字符串读入字符数组中，就不用&amp;。<br>如以下代码</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="keyword">int</span> main</span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">int</span> age;  <span class="comment">//变量</span></span><br><span class="line">  <span class="keyword">char</span> id[<span class="number">30</span>];  <span class="comment">//字符数组，用于储存字符串</span></span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">"请输入你的年龄和学号\n"</span>);</span><br><span class="line">  <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;age); <span class="comment">//这里需要使用&amp;</span></span><br><span class="line">  <span class="built_in">scanf</span>(<span class="string">"%s"</span>,id);<span class="comment">//字符串不需要&amp;</span></span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">"%d%s\n"</span>,age,id);</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure>
<p><strong>常用运算符</strong><br><strong>赋值运算符：=</strong></p>
<p>等号左侧是一个变量名，右侧是赋给该变量的值。符号=被称为赋值运算符。赋值行为从右往左进行。<br>如<code>i=i+1;</code><br>该语句的意思是：找出变量 i 的值，把该值加 1，然后把新值赋值变量i</p>
<p> <strong>加法运算符:+</strong>(不讲)<br> <strong>减法运算符：-</strong>（不讲）<br><strong>乘法运算符：*</strong>（不讲）<br> <strong>除法运算符：/</strong>（不讲）</p>
<p> <strong>运算符的优先级</strong><br> 对于C语言，运算符的优先级是从乘除到加减，优先级相同从左到右的顺序，当然=除外。（=是从右往左）</p>
<p><strong>递增运算符：++</strong><br>前缀递增符:<strong>++a</strong><br>后缀递增符:<strong>a++</strong><br>不同：优先级不同，前缀递增符先递增后运算。<br>后缀递增符先运算后递增。<br>举个例子：<code>i=233*++a</code><br>a递增1，然后233乘以a，并赋值给i</p>
<blockquote>
<p>i=233*a++</p>
</blockquote>
<p>2乘以a,并将结果给i,然后a递增1</p>
<p><strong>递减运算符：–</strong>（与递增相同）</p>
<p><strong>循环</strong><br>C语言有3种循环：for、while、do while</p>
<p><strong>whlie循环</strong></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> i;</span><br><span class="line">	i = <span class="number">1</span>;</span><br><span class="line">	<span class="keyword">while</span> (i&lt;<span class="number">3</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">"烫"</span>);</span><br><span class="line">		i++;<span class="comment">//输出烫时加1</span></span><br><span class="line">	&#125;</span><br><span class="line">		</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>以上的代码打印2个的烫</p>
<p><strong>如何强制退出循环？</strong></p>
<p>break;<br>goto;等语句这里不必多讲</p>
<p><strong>for循环</strong><br>主要形式<br>for(初始值;初始值对比;初始值增加)<br>举个例子：</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> i;</span><br><span class="line">	<span class="keyword">for</span> (i = <span class="number">1</span>; i &lt; <span class="number">3</span>; i++)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">"烫"</span>);</span><br><span class="line">		<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>以上代码会输出两个烫<br><strong>do while</strong><br>至少执行循环体中内容一次<br>do<br>{<br>}while();<br>举个例子</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> i;</span><br><span class="line">  <span class="keyword">do</span></span><br><span class="line">  &#123;</span><br><span class="line">   i++;</span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">"烫"</span>);</span><br><span class="line">  &#125; <span class="keyword">while</span>(i&lt;<span class="number">3</span>);</span><br><span class="line"> <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure>
<p>以上代码会出现三个烫<br>switch和break语句</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">switch</span> ( 整型表达式）</span><br><span class="line">&#123;</span><br><span class="line">case1 常量<span class="number">1</span>:</span><br><span class="line">语句 </span><br><span class="line">case2 常量<span class="number">2</span>:</span><br><span class="line">语句 </span><br><span class="line"><span class="keyword">break</span>;<span class="comment">//跳出</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong>数组</strong><br>数组类型<br>int ID[20];//储存20个int类型整数的数组<br>char Name[20];//储存20个字符的数组<br>float mark[20];//储存20个float类型的数组<br>二维数组<br>float a[5][12];//内含5个数组元素的数组，每个数组元素内含12个float类型的元素<br>float a[5][12]; // rain是一个内含5个元素的数组<br>float a[5][12] ; // 一个内含12个float类型元素的数组</p>
<p><strong>if语句常见错误</strong></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> (a &lt; x &lt; z) <span class="comment">// 错误，没有使用逻辑运算符</span></span><br><span class="line"><span class="keyword">if</span> (ch != <span class="string">'a'</span> &amp;&amp; != <span class="string">'b'</span>) <span class="comment">// 错误，缺少完整的测试</span></span><br></pre></td></tr></table></figure>
<p>正确的方式是用逻辑运算符连接两个关系表达式：</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> (a &lt; x &amp;&amp; x &lt; z) <span class="comment">// 使用&amp;&amp;组合</span></span><br><span class="line"><span class="keyword">if</span> (ch != <span class="string">'q'</span> &amp;&amp; ch != <span class="string">'Q'</span>) <span class="comment">// 使用&amp;&amp;组合两个表达式</span></span><br></pre></td></tr></table></figure>




]]></content>
      <categories>
        <category>C语言</category>
      </categories>
  </entry>
  <entry>
    <title>hexo博客主题搭建</title>
    <url>/2019/12/10/hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/</url>
    <content><![CDATA[<p>搭建完以后你会发现hexo的初始主题有些难看，所以我们选择修改主题。<br>这里只讲next主题修改<br><strong>下载next</strong></p>
<p>先进入BLOG在themes文件夹里右键gitbash进入并输入</p>
<blockquote>
<p>git clone <a href="https://github.com/iissnan/hexo-theme-next" target="_blank" rel="noopener">https://github.com/iissnan/hexo-theme-next</a> themes/next</p>
</blockquote>
<p><strong>修改主题</strong><br>在config.yml找到themes，这里可直接使用ctrl+shift+f快速查找<br>找到themses时，lanspeas修改为<strong>next</strong><br>然后在blog文件夹右键gitbash输入</p>
<blockquote>
<p>hexo clean<br>hexo g -d </p>
</blockquote>
<p>然后你就可以在你的入<a href="http://yourname.github.io看到你的新主题了" target="_blank" rel="noopener">http://yourname.github.io看到你的新主题了</a></p>
<p>注意事项<br>主题里也有个config.yml你需要修改<br>站点config.yml</p>
<blockquote>
<p>title: 老猫的博客 #网站标题<br>subtitle: #网站副标题<br>description: #网站描述<br>author: dclef #您的名字<br>language: zh-Hans #网站使用的语言<br>timezone: #网站时区。Hex 默认使用您电脑时区。</p>
</blockquote>
<p>创建分类标签归档关于</p>
<blockquote>
<p>hexo new page categories<br>hexo new page tags<br>hexo new page about<br>hexo new page archives</p>
</blockquote>
<p>分别在分类标签归档关于里的index文件中添加</p>
<blockquote>
<p>type: “categories”<br>type: “tags”<br>type: “about”<br>type: “archives”</p>
</blockquote>
<blockquote>
<h1 id="中文主题配置详解"><a href="#中文主题配置详解" class="headerlink" title="中文主题配置详解"></a>中文主题配置详解</h1><pre><code>  override: false    # 设置为true，则完全重载默认配置，当你完全不想继承主题配置时很有用
# ---------------------------------------------------------------
# 站点信息设置
# ---------------------------------------------------------------
favicon:     # favicon升级了，细化各种规格。
  small: /images/favicon-16x16-next.png#网站图标
  medium: /images/favicon-32x32-next.png    # medium类型应用`/favicon.ico`，否则网站图标异常
  apple_touch_icon: /images/apple-touch-icon-next.png
  safari_pinned_tab: /images/logo.svg
  #android_manifest: /images/manifest.json
  #ms_browserconfig: /images/browserconfig.xml
keywords: &quot;Hexo, NexT&quot;                        # 网站默认关键词
rss:                            # rss配置。false禁止；留空提供站点提供的；也可以自己指定
footer:                        # footer块配置
  #since: 2019      # 网站建站年份，如果不配，采用当前年份
  icon: user            # 年份和版权声明之间的图标
  copyright:            # 版权声明。如为空，则取站点配置的`author`值。
  powered: true        # 显示Hexo的链接（Power by Hexo）
  theme:                    # 在footer块中显示主题信息
    enable: true    # 显示主题信息
    version: true    # 显示主题的版本。


# ---------------------------------------------------------------
# SEO设置
# ---------------------------------------------------------------
# 标记为权威网站，有利于SEO搜索。如果打开该标签，务必在站点配置中设置url。
canonical: true
seo: false
# 如果index_with_subtitle为true，则在主页标题中增加subtitle。
# subtitle: Subtitle # 此处也可以覆写，它会替代站点配置文件中的内容
index_with_subtitle: false
# ---------------------------------------------------------------
# 菜单设置
# ---------------------------------------------------------------
# 用法: `Key: /link/ || icon`
# Key 菜单名，如果语言文件中有对应项，则用对应项，否则就用菜单名。
# `||` 前面部分，表示目标链接。
# `||` 后面部分，表示菜单的FontAwesome图标名。默认为question图标。
menu:
  home: / || home                        # 主页链接及其图标
  #about: /about/ || user                # 关于页链接及其图标
  #tags: /tags/ || tags                  # 标签页链接及其图标
  #categories: /categories/ || th        # 分类页链接及其图标
  archives: /archives/ || archive        # 归档页及其图标
  #schedule: /schedule/ || calendar
  #sitemap: /sitemap.xml || sitemap
  #commonweal: /404/ || heartbeat
menu_icons:
  enable: true                           # 是否启用图标
# ---------------------------------------------------------------
# 主题的主题设置
# ---------------------------------------------------------------
# 只能选择一套。
# Schemes 
#scheme: Muse#默认 Scheme，这是 NexT 最初的版本，黑白主调，大量留白
#scheme: Mist # Muse 的紧凑版本，整洁有序的单栏外观
#scheme: Pisces # 双栏 Scheme
scheme: Gemini # 类似 Pisces
# ---------------------------------------------------------------
# 侧边栏设置
# ---------------------------------------------------------------
# 社交链接
# 用法: `Key: permalink || icon`
# Key 是最终显示的标签，`||` 前是永久链接,`||` 后面是标签的FontAwesome图标，默认glob
#social:
  #GitHub: https://github.com/yourname || github
  #E-Mail: mailto:yourname@gmail.com || envelope
  #Google: https://plus.google.com/yourname || google
  #Twitter: https://twitter.com/yourname || twitter
  #FB Page: https://www.facebook.com/yourname || facebook
  #VK Group: https://vk.com/yourname || vk
  #StackOverflow: https://stackoverflow.com/yourname || stack-overflow
  #YouTube: https://youtube.com/yourname || youtube
  #Instagram: https://instagram.com/yourname || instagram
  #Skype: skype:yourname?call|chat || skype
social_icons:
  enable: true             # 是否在社交链接标签上显示图标
  icons_only: false        # 只显示图标
  transition: false        # 是否显示过渡效果
# 友情链接
links_icon: link                              # 链接图标
links_title: Links                            # 链接标签文字
links_layout: block                           # 链接样式
#links_layout: inline
#links:                                       # 一个一个的友情链接。用法为`标题： 链接`
  #Title: http://example.com/
# Sidebar Avatar                              # 侧边栏上个人头像图片。也支持是动态gif。
#avatar: /images/avatar.gif
# 在侧边栏中是否显示文章标题目录。
toc:
  enable: true                                # 是否
  number: true                                # 是否自动编号
  wrap: false                                 # 标题目录是否自动换行
# 创作声明
# http://creativecommons.org/
# Available: by | by-nc | by-nc-nd | by-nc-sa | by-nd | by-sa | zero
#creative_commons: by-nc-sa
#creative_commons:
sidebar:
  # 侧边栏位置: left | right (只有Pisces、Gemini有效).
  position: left
  #position: right
  # 侧边栏显示 (只对Muse、Mist有效)
  display: post                               # 默认，在post文章扩展时显示。
  #display: always                            # 对所有页面都显示
  #display: hide                              # 只有点击按钮显示
  #display: remove                            # 完全删除，不显示
  # 侧边栏距离顶部菜单条的距离，单位像素(只对Pisces、Gemini有效).
  offset: 12
  b2t: false            # 在侧边栏下方是否显示回到顶部(只对Pisces、Gemini有效).
  scrollpercent: false  # 是否显示滚动百分比
  onmobile: false       # 是否在窄屏设备上显示侧边栏 (只对 Muse | Mist有效).
# ---------------------------------------------------------------
# 文章设置（post类型）
# ---------------------------------------------------------------
scroll_to_more: true      # 自动折叠&lt;!--more--&gt;下面的正文部分
save_scroll: false        # 自动为每篇文章保存滚动位置
# Automatically excerpt description in homepage as preamble text.
excerpt_description: true
# 自动摘要，不建议。请使用&lt;!-- more --&gt;精确控制
auto_excerpt:
  enable: false         # 启动开关
  length: 150           # 从开始往后选取的摘要文字数量。
# 摘要元数据
post_meta:
  item_text: true              # 是否显示“发表于”这几个文字
  created_at: true             # 文章创建日期
  updated_at: false            # 文章修改日期
  categories: true             # 文章所属分类
post_wordcount:                # 字数统计。依赖https://github.com/willin/hexo-wordcount
  item_text: true              # 是否显示文字
  wordcount: false             # 显示字数
  min2read: false              # 显示阅读时间
  totalcount: false            # 显示总数
  separated_meta: true         # 是否分开
#wechat_subscriber:            # 微信公众号订阅
  #enabled: true               # 是否启用
  #qcode:                      # 二维码图片链接
  #description:                # 描述性文字，会放在二维码上方
# 打赏
#reward_comment: # 打赏文字
#wechatpay: /images/wechatpay.jpg   # 微信打赏二维码
#alipay: /images/alipay.jpg         # 支付宝打赏二维码
#bitcoin: /images/bitcoin.png       # 比特币打赏二维码
post_copyright:
  enable: false                     # 文档许可声明
  license: CC BY-NC-SA 3.0          # 文档声明协议
  license_url: https://creativecommons.org/licenses/by-nc-sa/3.0/
# ---------------------------------------------------------------
# Misc 主题专用设置
# ---------------------------------------------------------------
# Reduce padding / margin indents on devices with narrow width.
mobile_layout_economy: false
# Android Chrome header panel color ($black-deep).
android_chrome_color: &quot;#222&quot;
# 定制Logo，只对默认Muse有效。
# Options:
#   enabled: [true/false] - # 是否启用
#   image: url-of-image   - # 图片url
custom_logo:
  enabled: false
  image:
# 代码高亮主题。可选值normal | night | night eighties | night blue | night bright
highlight_theme: normal
# ---------------------------------------------------------------
# 字体设置儿
# - 请从谷歌查找字体
# - 所有字体必须具有下列样式
#     light, light italic, normal, normal italic, bold, bold italic
font:
  enable: false                  # 是否启用
  host:                          # 字体host地址
  # Font options:                # 字体选项
  # `external: true`             # true，则会从上面的host地址装载
  # `family: Times New Roman`.
  # `size: xx`. 单位是`px`.
  # 在&lt;body&gt;元素中设置全局字体
  global:
    external: true
    family: Lato
    size:
  # 标题（h1~h6字体，有global字体设置托底）
  headings:
    external: true
    family:
    size:
  # post文章字体，有global字体设置托底
  posts:
    external: true
    family:
   # logo字体设置，有global字体设置托底
  logo:
    external: true
    family:
    size:
  # 代码块字体
  codes:
    external: true
    family:
    size:
# ---------------------------------------------------------------
# 第三方服务设置
# ---------------------------------------------------------------
# MathJax数学公式设置
mathjax:
  enable: false
  per_page: false
  cdn: //cdn.bootcss.com/mathjax/2.7.1/latest.js?config=TeX-AMS-MML_HTMLorMML
# Han Support docs: https://hanzi.pro/
han: false
# Swiftype Search API Key
#swiftype_key:
#baidu_analytics:          # 百度分析的id
#duoshuo_shortname:        # 多说的shorname
# Disqus Disqus评论支持
disqus:
  enable: false
  shortname:
  count: true
# Hypercomments
#hypercomments_id:
# 畅言
changyan:
  enable: false
  appid:
  appkey:
# 韩国来必力网站评论系统.https://valine.js.org
valine:
  enable: false
  appid:  # your leancloud application appid
  appkey:  # your leancloud application appkey
  notify: false # mail notifier , https://github.com/xCss/Valine/wiki
  verify: false # Verification code
  placeholder: Just go go # comment box placeholder
  avatar: mm # gravatar style
  guest_info: nick,mail,link # custom comment header
  pageSize: 10 # pagination size
# 友言评论
#youyan_uid: your uid
# LiveRe评论系统。从https://livere.com/insight/myCode获取uid
#livere_uid: your uid
# Gitment评论系统。https://imsun.net/posts/gitment-introduction/
# You can get your Github ID from https://api.github.com/users/&lt;Github username&gt;
gitment:
  enable: false
  mint: true # RECOMMEND, A mint on Gitment, to support count, language and proxy_gateway
  count: true # Show comments count in post meta area
  lazy: false # Comments lazy loading with a button
  cleanly: false # Hide &apos;Powered by ...&apos; on footer, and more
  language: # Force language, or auto switch by theme
  github_user: # MUST HAVE, Your Github ID
  github_repo: # MUST HAVE, The repo you use to store Gitment comments
  client_id: # MUST HAVE, Github client id for the Gitment
  client_secret: # EITHER this or proxy_gateway, Github access secret token for the Gitment
  proxy_gateway: # Address of api proxy, See: https://github.com/aimingoo/intersect
  redirect_protocol: # Protocol of redirect_uri with force_redirect_protocol when mint enabled
# Baidu Share
# Available value:
#    button | slide
# Warning: Baidu Share does not support https.
#baidushare:
##  type: button
# Share
# This plugin is more useful in China, make sure you known how to use it.
# And you can find the use guide at official webiste: http://www.jiathis.com/.
# Warning: JiaThis does not support https.
#jiathis:
  ##uid: Get this uid from http://www.jiathis.com/
#add_this_id:
# Share
#duoshuo_share: true
# NeedMoreShare2
# This plugin is a pure javascript sharing lib which is useful in China.
# See: https://github.com/revir/need-more-share2
# Also see: https://github.com/DzmVasileusky/needShareButton
# iconStyle: default | box
# boxForm: horizontal | vertical
# position: top / middle / bottom + Left / Center / Right
# networks: Weibo,Wechat,Douban,QQZone,Twitter,Linkedin,Mailto,Reddit,
#           Delicious,StumbleUpon,Pinterest,Facebook,GooglePlus,Slashdot,
#           Technorati,Posterous,Tumblr,GoogleBookmarks,Newsvine,
#           Evernote,Friendfeed,Vkontakte,Odnoklassniki,Mailru
needmoreshare2:
  enable: false
  postbottom:
    enable: false
    options:
      iconStyle: box
      boxForm: horizontal
      position: bottomCenter
      networks: Weibo,Wechat,Douban,QQZone,Twitter,Facebook
  float:
    enable: false
    options:
      iconStyle: box
      boxForm: horizontal
      position: middleRight
      networks: Weibo,Wechat,Douban,QQZone,Twitter,Facebook
# Google Webmaster tools verification setting
# See: https://www.google.com/webmasters/
#google_site_verification:
# Google Analytics
#google_analytics:
# Bing Webmaster tools verification setting
# See: https://www.bing.com/webmaster/
#bing_site_verification:
# Yandex Webmaster tools verification setting
# See: https://webmaster.yandex.ru/
#yandex_site_verification:
# CNZZ count
#cnzz_siteid:
# Application Insights
# See https://azure.microsoft.com/en-us/services/application-insights/
# application_insights:
# Make duoshuo show UA
# user_id must NOT be null when admin_enable is true!
# you can visit http://dev.duoshuo.com get duoshuo user id.
duoshuo_info:
  ua_enable: true
  admin_enable: false
  user_id: 0
  #admin_nickname: Author
# Post widgets &amp; FB/VK comments settings.
# ---------------------------------------------------------------
# Facebook SDK Support.
# https://github.com/iissnan/hexo-theme-next/pull/410
facebook_sdk:
  enable:       false
  app_id:       #&lt;app_id&gt;
  fb_admin:     #&lt;user_id&gt;
  like_button:  #true
  webmaster:    #true
# Facebook comments plugin
# This plugin depends on Facebook SDK.
# If facebook_sdk.enable is false, Facebook comments plugin is unavailable.
facebook_comments_plugin:
  enable:       false
  num_of_posts: 10    # min posts num is 1
  width:        100%  # default width is 550px
  scheme:       light # default scheme is light (light or dark)
# VKontakte API Support.
# To get your AppID visit https://vk.com/editapp?act=create
vkontakte_api:
  enable:       false
  app_id:       #&lt;app_id&gt;
  like:         true
  comments:     true
  num_of_posts: 10
# Star rating support to each article.
# To get your ID visit https://widgetpack.com
rating:
  enable: false
  id:     #&lt;app_id&gt;
  color:  fc6423
# ---------------------------------------------------------------
# Show number of visitors to each article.
# You can visit https://leancloud.cn get AppID and AppKey.
leancloud_visitors:
  enable: false
  app_id: #&lt;app_id&gt;
  app_key: #&lt;app_key&gt;
# Another tool to show number of visitors to each article.
# visit https://console.firebase.google.com/u/0/ to get apiKey and projectId
# visit https://firebase.google.com/docs/firestore/ to get more information about firestore
firestore:
  enable: false
  collection: articles #required, a string collection name to access firestore database
  apiKey: #required
  projectId: #required
  bluebird: false #enable this if you want to include bluebird 3.5.1(core version) Promise polyfill
# Show PV/UV of the website/page with busuanzi.
# Get more information on http://ibruce.info/2015/04/04/busuanzi/
busuanzi_count:
  # count values only if the other configs are false
  enable: false
  # custom uv span for the whole site
  site_uv: true
  site_uv_header: &lt;i class=&quot;fa fa-user&quot;&gt;&lt;/i&gt;
  site_uv_footer:
  # custom pv span for the whole site
  site_pv: true
  site_pv_header: &lt;i class=&quot;fa fa-eye&quot;&gt;&lt;/i&gt;
  site_pv_footer:
  # custom pv span for one page only
  page_pv: true
  page_pv_header: &lt;i class=&quot;fa fa-file-o&quot;&gt;&lt;/i&gt;
  page_pv_footer:
# Tencent analytics ID
# tencent_analytics:
# Tencent MTA ID
# tencent_mta:
# Enable baidu push so that the blog will push the url to baidu automatically which is very helpful for SEO
baidu_push: false
# Google Calendar
# Share your recent schedule to others via calendar page
#
# API Documentation:
# https://developers.google.com/google-apps/calendar/v3/reference/events/list
calendar:
  enable: false
  calendar_id: &lt;required&gt;
  api_key: &lt;required&gt;
  orderBy: startTime
  offsetMax: 24
  offsetMin: 4
  timeZone:
  showDeleted: false
  singleEvents: true
  maxResults: 250
# Algolia Search
algolia_search:
  enable: false
  hits:
    per_page: 10
  labels:
    input_placeholder: Search for Posts
    hits_empty: &quot;We didn&apos;t find any results for the search: ${query}&quot;
    hits_stats: &quot;${hits} results found in ${time} ms&quot;
# Local search
# Dependencies: https://github.com/flashlab/hexo-generator-search
local_search:
  enable: false
  # if auto, trigger search by changing input
  # if manual, trigger search by pressing enter key or search button
  trigger: auto
  # show top n results per article, show all results by setting to -1
  top_n_per_article: 1
# ---------------------------------------------------------------
# 标签设置
# ---------------------------------------------------------------
# 对外链采用BASE64进行加密解密
# 用法: {% exturl text url "title" %}
# 别名: {% extlink text url "title" %}
exturl: false    # 是否对外链进行加密解密
# Note tag (bs-callout).
note:
  # Note tag style values:
  #  - simple    bs-callout old alert style. Default.
  #  - modern    bs-callout new (v2-v3) alert style.
  #  - flat      flat callout style with background, like on Mozilla or StackOverflow.
  #  - disabled  disable all CSS styles import of note tag.
  style: simple
  icons: false
  border_radius: 3
  # Offset lighter of background in % for modern and flat styles (modern: -12 | 12; flat: -18 | 6).
  # Offset also applied to label tag variables. This option can work with disabled note tag.
  light_bg_offset: 0
# Label tag.
label: true
# Tabs tag.
tabs:
  enable: true
  transition:
    tabs: false
    labels: true
  border_radius: 0
#! ---------------------------------------------------------------
#! 下面慎重修改，除非你指定它的意义
#! ---------------------------------------------------------------
# Use velocity to animate everything.
motion:
  enable: true
  async: false
  transition:
    # Transition variants:
    # fadeIn | fadeOut | flipXIn | flipXOut | flipYIn | flipYOut | flipBounceXIn | flipBounceXOut | flipBounceYIn | flipBounceYOut
    # swoopIn | swoopOut | whirlIn | whirlOut | shrinkIn | shrinkOut | expandIn | expandOut
    # bounceIn | bounceOut | bounceUpIn | bounceUpOut | bounceDownIn | bounceDownOut | bounceLeftIn | bounceLeftOut |</code></pre><p>bounceRightIn | bounceRightOut<br>        # slideUpIn | slideUpOut | slideDownIn | slideDownOut | slideLeftIn | slideLeftOut | slideRightIn | slideRightOut<br>        # slideUpBigIn | slideUpBigOut | slideDownBigIn | slideDownBigOut | slideLeftBigIn | slideLeftBigOut | slideRightBigIn |<br>slideRightBigOut<br>        # perspectiveUpIn | perspectiveUpOut | perspectiveDownIn | perspectiveDownOut | perspectiveLeftIn | perspectiveLeftOut |<br>perspectiveRightIn | perspectiveRightOut<br>        post_block: fadeIn<br>        post_header: slideDownIn<br>        post_body: slideDownIn<br>        coll_header: slideLeftIn<br>        # Only for Pisces | Gemini.<br>        sidebar: slideUpIn<br>    # Fancybox<br>    fancybox: true<br>    # Progress bar in the top during page loading.<br>    pace: false<br>    # Themes list:<br>    #pace-theme-big-counter<br>    #pace-theme-bounce<br>    #pace-theme-barber-shop<br>    #pace-theme-center-atom<br>    #pace-theme-center-circle<br>    #pace-theme-center-radar<br>    #pace-theme-center-simple<br>    #pace-theme-corner-indicator<br>    #pace-theme-fill-left<br>    #pace-theme-flash<br>    #pace-theme-loading-bar<br>    #pace-theme-mac-osx<br>    #pace-theme-minimal<br>    # For example<br>    # pace_theme: pace-theme-center-simple<br>    pace_theme: pace-theme-minimal<br>    # Canvas-nest<br>    canvas_nest: false<br>    # three_waves<br>    three_waves: false<br>    # canvas_lines<br>    canvas_lines: false<br>    # canvas_sphere<br>    canvas_sphere: false<br>    # Only fit scheme Pisces<br>    # Canvas-ribbon<br>    # size: The width of the ribbon.<br>    # alpha: The transparency of the ribbon.<br>    # zIndex: The display level of the ribbon.<br>    canvas_ribbon:<br>      enable: false<br>      size: 300<br>      alpha: 0.6<br>      zIndex: -1<br>    # 脚本提供者设置。<br>    # 为js文件指定CDN，加快加载速度<br>    # 注意，CDN版本一致。如果CDN提供https，无别加上https协议。<br>    vendors:<br>      _internal: lib    # 本网站提供脚本的路径，不要轻易修改。<br>      jquery:    <a href="https://cdn.bootcss.com/jquery/2.1.3/jquery.min.js" target="_blank" rel="noopener">https://cdn.bootcss.com/jquery/2.1.3/jquery.min.js</a> # 内部版本2.1.3。CDN版本应一致<br>      fancybox:<br>      fancybox_css:<br>      fastclick:<br>      lazyload:<br>      velocity:<br>      velocity_ui:<br>      ua_parser:<br>      fontawesome:<br>      algolia_instant_js:    fontawesome:<br>      algolia_instant_css:<br>      pace:<br>      pace_css:<br>      canvas_nest:<br>      three:<br>      three_waves:<br>      canvas_lines:<br>      canvas_sphere:<br>      canvas_ribbon:<br>      han:<br>      needMoreShare2:<br>    # 资源种类<br>    css: css<br>    js: js<br>    images: images<br>    # Theme version<br>    version: 5.1.4</p>
</blockquote>
]]></content>
      <categories>
        <category>小白入门</category>
      </categories>
  </entry>
  <entry>
    <title>学生管理系统（C语言版）</title>
    <url>/2019/12/09/%E5%AD%A6%E7%94%9F%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F%EF%BC%88C%E8%AF%AD%E8%A8%80%E7%89%88%EF%BC%89/</url>
    <content><![CDATA[<p>学校作业，先发到博客上<br>更新更改已知错误<br>再度更新最终版</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string.h&gt;  </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> N 1000 </span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Student</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">char</span> ID[<span class="number">20</span>];</span><br><span class="line">    <span class="keyword">char</span> Name[<span class="number">20</span>];</span><br><span class="line">    <span class="keyword">float</span> Mark[<span class="number">3</span>];</span><br><span class="line">    <span class="keyword">float</span> Average;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="keyword">float</span> <span class="title">Avg</span><span class="params">(struct Student stu)</span></span>;<span class="comment">//求平均值</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Student_SearchByIndex</span><span class="params">(<span class="keyword">char</span> id[])</span></span>;<span class="comment">//通过学号返回数组下标</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Student_SearchByName</span><span class="params">(<span class="keyword">char</span> name[])</span></span>;<span class="comment">//通过姓名返回数组下标</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Student_DisplaySingle</span><span class="params">(<span class="keyword">int</span> index)</span></span>;<span class="comment">//显示单条学生记录</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Student_Insert</span><span class="params">()</span></span>;<span class="comment">//插入学生信息</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Student_Modify</span><span class="params">()</span></span>;<span class="comment">//修改学生信息</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Student_Delete</span><span class="params">()</span></span>;<span class="comment">//删除学生信息</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Student_SelectByName</span><span class="params">()</span></span>;<span class="comment">//按姓名查询</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Student_SelectByID</span><span class="params">()</span></span>;<span class="comment">//按学号查询</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Student_SortByAverage</span><span class="params">()</span></span>;<span class="comment">//按平均值排序</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Student_Display</span><span class="params">()</span></span>;<span class="comment">//显示全部学生信息</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">IO_ReadInfo</span><span class="params">()</span></span>;<span class="comment">//将学生信息从文件读出</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">IO_WriteInfo</span><span class="params">()</span></span>;<span class="comment">//将学生信息写入文件</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*声明学生数组及学生数量*/</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Student</span> <span class="title">students</span>[<span class="title">N</span>];</span></span><br><span class="line"><span class="keyword">int</span> num = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*求平均值*/</span></span><br><span class="line"><span class="function"><span class="keyword">float</span> <span class="title">Avg</span><span class="params">(struct Student stu)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> (stu.Mark[<span class="number">0</span>] + stu.Mark[<span class="number">1</span>] + stu.Mark[<span class="number">2</span>]) / <span class="number">3</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*通过学号返回数组下标</span></span><br><span class="line"><span class="comment">将学生学号与查询的学号做比较，</span></span><br><span class="line"><span class="comment">如果相等则返回该学生的下标 ，找不到则返回-1. */</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Student_SearchByIndex</span><span class="params">(<span class="keyword">char</span> id[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; num; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">strcmp</span>(students[i].ID, id) == <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> i;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*通过姓名返回数组下标*/</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Student_SearchByName</span><span class="params">(<span class="keyword">char</span> name[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; num; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">strcmp</span>(students[i].Name, name) == <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> i;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*显示单条学生记录*/</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Student_DisplaySingle</span><span class="params">(<span class="keyword">int</span> index)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%10s%10s%8s%8s%8s%10s\n"</span>, <span class="string">"学号"</span>, <span class="string">"姓名"</span>, <span class="string">"成绩"</span>, <span class="string">"成绩"</span>, <span class="string">"成绩"</span>, <span class="string">"平均成绩"</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"-------------------------------------------------------------\n"</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%10s%10s%8.2f%8.2f%8.2f%10.2f\n"</span>, students[index].ID, students[index].Name,</span><br><span class="line">        students[index].Mark[<span class="number">0</span>], students[index].Mark[<span class="number">1</span>], students[index].Mark[<span class="number">2</span>], students[index].Average);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*插入学生信息*/</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Student_Insert</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">while</span> (<span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"请输入学号:"</span>);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%s"</span>, &amp;students[num].ID);</span><br><span class="line">        getchar();</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"请输入姓名:"</span>);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%s"</span>, &amp;students[num].Name);</span><br><span class="line">        getchar();</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"请输入成绩:"</span>);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%f"</span>, &amp;students[num].Mark[<span class="number">0</span>]);</span><br><span class="line">        getchar();</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"请输入成绩:"</span>);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%f"</span>, &amp;students[num].Mark[<span class="number">1</span>]);</span><br><span class="line">        getchar();</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"请输入成绩:"</span>);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%f"</span>, &amp;students[num].Mark[<span class="number">2</span>]);</span><br><span class="line">        getchar();</span><br><span class="line">        students[num].Average = Avg(students[num]);</span><br><span class="line">        num++;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"是否继续?(y/n)"</span>);</span><br><span class="line">        <span class="keyword">if</span> (getchar() == <span class="string">'n'</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*修改学生信息*/</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Student_Modify</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">//float Mark[0],Mark[1],Mark[2];  </span></span><br><span class="line">    <span class="keyword">while</span> (<span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">char</span> id[<span class="number">20</span>];</span><br><span class="line">        <span class="keyword">int</span> index;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"请输入要修改的学生的学号:"</span>);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%s"</span>, &amp;id);</span><br><span class="line">        getchar();</span><br><span class="line">        index = Student_SearchByIndex(id);</span><br><span class="line">        <span class="keyword">if</span> (index == <span class="number">-1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"学生不存在!\n"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"你要修改的学生信息为:\n"</span>);</span><br><span class="line">            Student_DisplaySingle(index);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"-- 请输入新值--\n"</span>);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"请输入学号:"</span>);</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%s"</span>, &amp;students[index].ID);</span><br><span class="line">            getchar();</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"请输入姓名:"</span>);</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%s"</span>, &amp;students[index].Name);</span><br><span class="line">            getchar();</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"请输入成绩:"</span>);</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%f"</span>, &amp;students[index].Mark[<span class="number">0</span>]);</span><br><span class="line">            getchar();</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"请输入成绩:"</span>);</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%f"</span>, &amp;students[index].Mark[<span class="number">1</span>]);</span><br><span class="line">            getchar();</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"请输入成绩:"</span>);</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%f"</span>, &amp;students[index].Mark[<span class="number">2</span>]);</span><br><span class="line">            getchar();</span><br><span class="line">            students[index].Average = Avg(students[index]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"是否继续?(y/n)"</span>);</span><br><span class="line">        <span class="keyword">if</span> (getchar() == <span class="string">'n'</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*删除学生信息*/</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Student_Delete</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i;</span><br><span class="line">    <span class="keyword">while</span> (<span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">char</span> id[<span class="number">20</span>];</span><br><span class="line">        <span class="keyword">int</span> index;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"请输入要删除的学生的学号:"</span>);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%s"</span>, &amp;id);</span><br><span class="line">        getchar();</span><br><span class="line">        index = Student_SearchByIndex(id);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (index == <span class="number">-1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"学生不存在!\n"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"你要删除的学生信息为:\n"</span>);</span><br><span class="line">            Student_DisplaySingle(index);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"是否真的要删除?(y/n)"</span>);</span><br><span class="line">            <span class="keyword">if</span> (getchar() == <span class="string">'y'</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">for</span> (i = index; i &lt; num - <span class="number">1</span>; i++)</span><br><span class="line">                &#123;</span><br><span class="line">                    students[i] = students[i + <span class="number">1</span>];<span class="comment">//把后边的对象都向前移动    </span></span><br><span class="line">                &#125;</span><br><span class="line">                num--;</span><br><span class="line">            &#125;</span><br><span class="line">            getchar();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"是否继续?(y/n)"</span>);</span><br><span class="line">        <span class="keyword">if</span> (getchar() == <span class="string">'n'</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*按学号查询*/</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Student_SelectByID</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">while</span> (<span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">char</span> ID[<span class="number">20</span>];</span><br><span class="line">        <span class="keyword">int</span> index;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"请输入要查询的学生的学号:"</span>);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%s"</span>, &amp;ID);</span><br><span class="line"></span><br><span class="line">        index = Student_SearchByIndex(ID); <span class="comment">//调用查询函数 </span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (index == <span class="number">-1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"学生不存在!\n"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"你要查询的学生信息为:\n"</span>);</span><br><span class="line">            Student_DisplaySingle(index);    <span class="comment">//调用显示单条记录函数</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"是否继续?(y/n)"</span>);</span><br><span class="line">        fflush(<span class="built_in">stdin</span>);</span><br><span class="line">        <span class="keyword">if</span> (getchar() == <span class="string">'n'</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*按姓名查询*/</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Student_SelectByName</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">while</span> (<span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">char</span> name[<span class="number">20</span>];</span><br><span class="line">        <span class="keyword">int</span> index;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"请输入要查询的学生的姓名:"</span>);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%s"</span>, &amp;name);</span><br><span class="line">        getchar();</span><br><span class="line">        index = Student_SearchByName(name);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (index == <span class="number">-1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"学生不存在!\n"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"你要查询的学生信息为:\n"</span>);</span><br><span class="line">            Student_DisplaySingle(index);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"是否继续?(y/n)"</span>);</span><br><span class="line">        <span class="keyword">if</span> (getchar() == <span class="string">'n'</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*按平均值排序*/</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Student_SortByAverage</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i, j;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">Student</span> <span class="title">tmp</span>;</span></span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; num; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (j = <span class="number">1</span>; j &lt; num - i; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (students[j - <span class="number">1</span>].Average &lt; students[j].Average)</span><br><span class="line">            &#123;</span><br><span class="line">                tmp = students[j - <span class="number">1</span>];</span><br><span class="line">                students[j - <span class="number">1</span>] = students[j];</span><br><span class="line">                students[j] = tmp;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*显示全部学生信息*/</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Student_Display</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%10s%10s%8s%8s%8s%10s\n"</span>, <span class="string">"学号"</span>, <span class="string">"姓名"</span>, <span class="string">"成绩"</span>, <span class="string">"成绩"</span>, <span class="string">"成绩"</span>, <span class="string">"平均成绩"</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"-------------------------------------------------------------\n"</span>);</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; num; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%10s%10s%8.2f%8.2f%8.2f%10.2f\n"</span>, students[i].ID, students[i].Name,</span><br><span class="line">            students[i].Mark[<span class="number">0</span>], students[i].Mark[<span class="number">1</span>], students[i].Mark[<span class="number">2</span>], students[i].Average);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*将学生信息从文件读出*/</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">IO_ReadInfo</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    FILE* fp;</span><br><span class="line">    <span class="keyword">int</span> i;</span><br><span class="line">    <span class="keyword">if</span> ((fp = fopen(<span class="string">"Database.txt"</span>, <span class="string">"rb"</span>)) == <span class="literal">NULL</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"不能打开文件!\n"</span>);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (fread(&amp;num, <span class="keyword">sizeof</span>(<span class="keyword">int</span>), <span class="number">1</span>, fp) != <span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        num = <span class="number">-1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; num; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            fread(&amp;students[i], <span class="keyword">sizeof</span>(struct Student), <span class="number">1</span>, fp);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    fclose(fp);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*将学生信息写入文件*/</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">IO_WriteInfo</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    FILE* fp;</span><br><span class="line">    <span class="keyword">int</span> i;</span><br><span class="line">    <span class="keyword">if</span> ((fp = fopen(<span class="string">"Database.txt"</span>, <span class="string">"wb"</span>)) == <span class="literal">NULL</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"不能打开文件!\n"</span>);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (fwrite(&amp;num, <span class="keyword">sizeof</span>(<span class="keyword">int</span>), <span class="number">1</span>, fp) != <span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"写入文件错误!\n"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; num; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (fwrite(&amp;students[i], <span class="keyword">sizeof</span>(struct Student), <span class="number">1</span>, fp) != <span class="number">1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"写入文件错误!\n"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    fclose(fp);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> choice;</span><br><span class="line">    IO_ReadInfo(); <span class="comment">//调用读学生信息函数</span></span><br><span class="line">    <span class="keyword">while</span> (<span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">/*主菜单*/</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"\n**********************欢迎使用学生成绩管理系统********************\n"</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">" \n1.增加学生记录\t2.查看学生记录\t3.修改学生记录\t4.删除学生记录\n"</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">" \n5.查询学生记录\t6.按平均成绩排序\t\t7. 退出\n"</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"\n******************************************************************\n"</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"请选择(1-7):"</span>);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;choice);</span><br><span class="line">        fflush(<span class="built_in">stdin</span>);</span><br><span class="line">        <span class="keyword">switch</span> (choice)</span><br><span class="line">        &#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">            Student_Insert();</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">            Student_Display();</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">            Student_Modify();</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">            Student_Delete();</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">5</span>:</span><br><span class="line">            Student_SelectByID();</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">6</span>:</span><br><span class="line">            Student_SortByAverage();</span><br><span class="line">            Student_Display();</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">7</span>:</span><br><span class="line">            <span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        IO_WriteInfo();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>C语言</category>
      </categories>
  </entry>
  <entry>
    <title>JAV磁力链和封面爬取</title>
    <url>/2019/11/18/JAV/</url>
    <content><![CDATA[<p> 博主在朋友建议下搞了这一个教程<br>接下来按我做的就行了<br><strong>第一步：下载该脚本</strong></p>
<blockquote>
<p>链接：<a href="https://pan.baidu.com/s/1tKn9P0r0vw4dU0GkRIIafA" target="_blank" rel="noopener">https://pan.baidu.com/s/1tKn9P0r0vw4dU0GkRIIafA</a><br>提取码：mwfw<br>复制这段内容后打开百度网盘手机App，操作更方便哦<br><strong>第二步：安装node.js</strong></p>
</blockquote>
<blockquote>
<p><a href="http://nodejs.cn/download/" target="_blank" rel="noopener">http://nodejs.cn/download/</a></p>
</blockquote>
<p><img src="https://img-blog.csdnimg.cn/20191117234500963.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2RyY2xlZg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述">安装时一直点下一步就行了（安装位置自己想放哪就放哪）<br><strong>第三步：安装cmder</strong></p>
<blockquote>
<p><a href="https://cmder.net/" target="_blank" rel="noopener">https://cmder.net/</a><br><img src="https://img-blog.csdnimg.cn/20191117234819136.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2RyY2xlZg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>安装迷你版即可</p>
</blockquote>
<p>安装完以后在cmder查看是否有npm和node版本出现如果有说明你安装成功并进入下一步<br><img src="https://img-blog.csdnimg.cn/20191117235144275.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2RyY2xlZg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p>PS：最好讲cmder和JAV文件夹放在一起方便一些</p>
<p><del><strong>第四步：进入JAV文件夹，在JAV文件夹安装npm依赖</strong></del> </p>
<p>这一步可能不起作用因为我给的是压缩包0.0里面自带<br><img src="https://img-blog.csdnimg.cn/20191118000005835.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2RyY2xlZg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p><strong>第四步：运用该脚本</strong></p>
<blockquote>
<p>输入node jav -h    你可以看到一下内容</p>
</blockquote>
<p><img src="https://img-blog.csdnimg.cn/2019111800050577.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2RyY2xlZg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述">接下来你就可以为所欲为了<br>设置我就不用说了就说一点如果要让你磁力链成功播放那就输入</p>
<blockquote>
<p>node jav -a </p>
</blockquote>
<p>搜索番号用</p>
<blockquote>
<p>node jav -a -s XXXX-XXXX(输入你想要的番号)</p>
</blockquote>
<p>如果只要一个链接就不需要-a</p>
]]></content>
      <categories>
        <category>脚本教程</category>
      </categories>
  </entry>
  <entry>
    <title>科学上网的快速搭建</title>
    <url>/2019/11/02/VPN/</url>
    <content><![CDATA[<p>1.下载个SSR，也就是我们俗称的飞机场。重新压制了一遍</p>
<blockquote>
<p>链接：<a href="https://pan.baidu.com/s/1Fi4ZU0rnmmLuixUQGMB48A" target="_blank" rel="noopener">https://pan.baidu.com/s/1Fi4ZU0rnmmLuixUQGMB48A</a><br>提取码：4c7a<br>解压码： laomao</p>
</blockquote>
<p>2.安装及配置<br>windows直接解压即可，手机安装软件也即可。<br><strong>windows</strong><br>解压打开这个<br><img src="https://img-blog.csdnimg.cn/2019110221243875.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2RyY2xlZg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述">这时候打开网站注册账号</p>
<blockquote>
<p><a href="https://yjcss.xyz/auth/register?code=Jzna" target="_blank" rel="noopener">https://yjcss.xyz/auth/register?code=Jzna</a></p>
</blockquote>
<p><img src="https://img-blog.csdnimg.cn/20191102212851682.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2RyY2xlZg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述">注册完毕以后打开节点列表，免费节点点击有在线人数的<br><img src="https://img-blog.csdnimg.cn/20191102213027988.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2RyY2xlZg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>点击链接，复制链接后用鼠标右键点击右下角小飞机<img src="https://img-blog.csdnimg.cn/20191102213701248.png" alt="在这里插入图片描述"><br>点击此项你便成功科学上网！当然代理规则改为绕过局域网和大陆，这样你打开本地的网站不会卡。如果有条件的话也可以购买SSR节点，一个月才9块。</p>
<p><strong>android</strong><br>因为此应用不能截屏所以只能用口头描述，但我相信既然windows会了，手机上也一样会。打开你的SSR，点击右下角的<strong>加号</strong>，要么<strong>扫描二维码</strong>，要么一样<strong>从剪贴板里面导入</strong>即可，同样的代理规则改为<strong>绕过局域网和大陆</strong>，这样你便会享受墙外的乐趣。比如上油管或者某P站。</p>
]]></content>
      <categories>
        <category>小白入门</category>
      </categories>
  </entry>
  <entry>
    <title>初学者Visual Studio 2019和Dreamwave cs6的安装与使用</title>
    <url>/2019/11/02/vs2019%20and%20dw%20cs6/</url>
    <content><![CDATA[<p>这只是一个小小的新手教程对于初学者来讲。</p>
<p>1.有条件直接下载Visual Studio2019 community（反正我不推荐2010版）</p>
<blockquote>
<p><a href="https://visualstudio.microsoft.com/zh-hans/downloads/" target="_blank" rel="noopener">https://visualstudio.microsoft.com/zh-hans/downloads/</a></p>
</blockquote>
<p><img src="https://img-blog.csdnimg.cn/20191102004506133.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2RyY2xlZg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p><strong>安装</strong><br>打开后点击继续，进入文件的提取<br><img src="https://img-blog.csdnimg.cn/20191102005108119.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2RyY2xlZg==,size_16,color_FFFFFF,t_70" alt="">这里选择    C++桌面开发，安装位置你可以选择除C盘以外的其他盘但注意的是安装到其他盘时，C盘也要占用2G</p>
<p><strong>创建一个新项目</strong><br><img src="https://img-blog.csdnimg.cn/20191102005710932.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2RyY2xlZg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20191102010014637.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2RyY2xlZg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述">)<img src="https://img-blog.csdnimg.cn/20191102010026368.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2RyY2xlZg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><strong>新建源文件</strong></p>
<p>右击右侧的源文件，没有右侧那个视图的要在上方的视图选项中打开解决方案资源管理器<br>默认的就是C++，你可以改源.cpp改为源.c<br>然后你就可以简单编写代码测试一下</p>
<p><strong>常见特殊情况问题解决</strong><br>预编译头错误</p>
<blockquote>
<p>解决办法：进入项目属性页，在下图所示目录修改预编译头的设置，应用并确定<br><img src="https://img-blog.csdnimg.cn/20191102010710250.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2RyY2xlZg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
</blockquote>
<p><strong>scanf错误</strong></p>
<blockquote>
<p>解决方案：scanf改为scanf_s即可</p>
</blockquote>
<p>2.或者下载Visual Studio2010专业版</p>
<blockquote>
<p>链接：<a href="https://pan.baidu.com/s/1MGb7IhnyRr2FYYt5QHqHFg" target="_blank" rel="noopener">https://pan.baidu.com/s/1MGb7IhnyRr2FYYt5QHqHFg</a><br>提取码：p8js<br>下载之后文件有2.5GB 解压ISO镜像文件，双击安装文件setup.exe 一键安装即可。安装完成之后，断网，在帮助-注册产品那里输入下载页面提供的秘钥<br>YCFHQ-9DWCY-DKV88-T2TMH-G7BHP </p>
</blockquote>
<p><strong>3.下载DW cs6版本</strong><br>安装解压我就不说了<br>但安装时会出现这个问题，忽略即可<br><img src="https://img-blog.csdnimg.cn/20191102011259873.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2RyY2xlZg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述">)<img src="https://img-blog.csdnimg.cn/2019110201135616.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2RyY2xlZg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>接下来一定要断网不然会出现注册账号页面<br>安装完以后启动程序<br><strong>破解方法：</strong></p>
<p>打开Dreamweaver cs6破解补丁，下载完毕后压缩包中有32与64两个文件夹分别代表32位程序与64位程序的补丁，选择64位的补丁。</p>
<p>打开Dreamweaver cs6安装文件夹，将适合自己系统的破解补丁文件夹中的文件拖入程序安装文件夹中覆盖同名文件<br><img src="https://img-blog.csdnimg.cn/20191102011717497.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2RyY2xlZg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述">进行覆盖确认后现程序不再提示需要注册激活，到此DW cs6安装破解完毕</p>
<p><strong>4.或者下载 Dreamwave cc2019</strong><br>由于我使用的是内部版，所以根本不需要破解直接安装。</p>
<blockquote>
<p>链接：<a href="https://pan.baidu.com/s/16WqRQTSJF6tvMjZIjT0Jsw" target="_blank" rel="noopener">https://pan.baidu.com/s/16WqRQTSJF6tvMjZIjT0Jsw</a><br>提取码：viih </p>
</blockquote>
<p>安装是直接set up 但唯一麻烦的是不能选择安装路径</p>
<p>到此教程结束</p>
]]></content>
      <categories>
        <category>小白入门</category>
      </categories>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2019/11/01/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>
]]></content>
  </entry>
</search>
